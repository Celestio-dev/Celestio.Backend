// <auto-generated />
using System;
using Celestio.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Celestio.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240324164134_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Celestio.Api.Data.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProfilePicMediaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfilePicMediaId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.Brief", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("BriefDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BriefTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Briefs");
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProfilePicMediaId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfilePicMediaId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.CompanyBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CompanyBrands");
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Media");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MediaType = "aaa",
                            MediaUrl = "lasbd url media"
                        });
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "AgencyAdmin"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Creator"
                        },
                        new
                        {
                            Id = 4,
                            Name = "User"
                        },
                        new
                        {
                            Id = 5,
                            Name = "BrandAdmin"
                        });
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocId")
                        .HasColumnType("int");

                    b.Property<int>("SocialMediaName")
                        .HasColumnType("int");

                    b.Property<string>("SocialMediaUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SocialMediae");
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.Submission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BriefId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.Property<string>("SubmissionDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmissionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WatermarkMediaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ProfilePicMediaId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfilePicMediaId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "teo@teo.com",
                            FirstName = "Teo",
                            LastName = "Ivancevic",
                            PasswordHash = new byte[] { 111, 90, 151, 205, 107, 71, 36, 123, 96, 51, 145, 239, 41, 130, 221, 139, 15, 74, 147, 243, 0, 92, 78, 136, 242, 23, 124, 136, 95, 213, 173, 22, 124, 237, 19, 176, 154, 16, 56, 213, 225, 131, 235, 14, 145, 141, 58, 193, 171, 73, 23, 23, 168, 144, 223, 95, 100, 136, 201, 131, 149, 231, 89, 84 },
                            PasswordSalt = new byte[] { 210, 29, 17, 125, 137, 129, 240, 147, 60, 115, 157, 144, 98, 11, 240, 23, 172, 98, 131, 180, 155, 85, 223, 229, 112, 189, 201, 207, 93, 162, 203, 126, 70, 153, 227, 80, 58, 182, 5, 38, 168, 176, 245, 205, 77, 172, 38, 29, 191, 168, 66, 106, 139, 172, 205, 118, 165, 180, 145, 159, 13, 169, 193, 157, 49, 13, 151, 255, 131, 232, 244, 3, 92, 52, 116, 162, 48, 10, 78, 164, 38, 211, 96, 81, 66, 36, 199, 20, 104, 81, 221, 12, 106, 62, 41, 175, 94, 113, 137, 5, 168, 159, 136, 138, 247, 206, 19, 129, 146, 212, 7, 119, 169, 74, 26, 97, 23, 192, 8, 226, 30, 216, 192, 247, 244, 204, 136, 239 },
                            ProfilePicMediaId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.UserCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserCategories");
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.Brand", b =>
                {
                    b.HasOne("Celestio.Api.Data.Entities.Media", "ProfilePicMedia")
                        .WithMany()
                        .HasForeignKey("ProfilePicMediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfilePicMedia");
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.Brief", b =>
                {
                    b.HasOne("Celestio.Api.Data.Entities.Brand", null)
                        .WithMany("Briefs")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.Company", b =>
                {
                    b.HasOne("Celestio.Api.Data.Entities.Media", "ProfilePicMedia")
                        .WithMany()
                        .HasForeignKey("ProfilePicMediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfilePicMedia");
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.SocialMedia", b =>
                {
                    b.HasOne("Celestio.Api.Data.Entities.User", null)
                        .WithMany("SocialMediae")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.User", b =>
                {
                    b.HasOne("Celestio.Api.Data.Entities.Media", "ProfilePicMedia")
                        .WithMany()
                        .HasForeignKey("ProfilePicMediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Celestio.Api.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfilePicMedia");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.Brand", b =>
                {
                    b.Navigation("Briefs");
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Celestio.Api.Data.Entities.User", b =>
                {
                    b.Navigation("SocialMediae");
                });
#pragma warning restore 612, 618
        }
    }
}
